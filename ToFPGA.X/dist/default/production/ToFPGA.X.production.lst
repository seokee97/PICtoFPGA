

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 31 10:38:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F690 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001C                     	;# 
    75     001D                     	;# 
    76     001E                     	;# 
    77     001F                     	;# 
    78     0081                     	;# 
    79     0085                     	;# 
    80     0086                     	;# 
    81     0087                     	;# 
    82     008C                     	;# 
    83     008D                     	;# 
    84     008E                     	;# 
    85     008F                     	;# 
    86     0090                     	;# 
    87     0092                     	;# 
    88     0093                     	;# 
    89     0093                     	;# 
    90     0093                     	;# 
    91     0094                     	;# 
    92     0095                     	;# 
    93     0095                     	;# 
    94     0096                     	;# 
    95     0096                     	;# 
    96     0097                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009A                     	;# 
   100     009B                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     0115                     	;# 
   109     0116                     	;# 
   110     0118                     	;# 
   111     0119                     	;# 
   112     011A                     	;# 
   113     011B                     	;# 
   114     011E                     	;# 
   115     011F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     019D                     	;# 
   119     019E                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     008F                     	;# 
   159     0090                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0093                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0095                     	;# 
   166     0095                     	;# 
   167     0096                     	;# 
   168     0096                     	;# 
   169     0097                     	;# 
   170     0098                     	;# 
   171     0099                     	;# 
   172     009A                     	;# 
   173     009B                     	;# 
   174     009E                     	;# 
   175     009F                     	;# 
   176     010C                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     0115                     	;# 
   182     0116                     	;# 
   183     0118                     	;# 
   184     0119                     	;# 
   185     011A                     	;# 
   186     011B                     	;# 
   187     011E                     	;# 
   188     011F                     	;# 
   189     018C                     	;# 
   190     018D                     	;# 
   191     019D                     	;# 
   192     019E                     	;# 
   193     0006                     _PORTBbits	set	6
   194     0007                     _PORTCbits	set	7
   195     001E                     _ADRESH	set	30
   196     001F                     _ADCON0bits	set	31
   197     0086                     _TRISBbits	set	134
   198     0087                     _TRISCbits	set	135
   199     009E                     _ADRESL	set	158
   200     009F                     _ADCON1bits	set	159
   201     0085                     _TRISAbits	set	133
   202     011E                     _ANSELbits	set	286
   203     011F                     _ANSELH	set	287
   204     011E                     _ANSEL	set	286
   205                           
   206                           	psect	cinit
   207     07FD                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07FD                     __initialization:
   211     07FD                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     07FD                     __end_of__initialization:
   215     07FD  0183               	clrf	3
   216     07FE  118A  2F15         	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	cstackCOMMON
   219     0070                     __pcstackCOMMON:
   220     0070                     ?_ADC_Init:
   221     0070                     ??_ADC_Init:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ?_sendParallelData:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ?_main:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_ADC_Read:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     sendParallelData@data:	
   234                           ; 2 bytes @ 0x0
   235                           
   236                           
   237                           ; 2 bytes @ 0x0
   238     0070                     	ds	2
   239     0072                     ??_ADC_Read:
   240     0072                     ??_sendParallelData:	
   241                           ; 1 bytes @ 0x2
   242                           
   243                           
   244                           ; 1 bytes @ 0x2
   245     0072                     	ds	3
   246     0075                     ??_main:
   247     0075                     main@data:	
   248                           ; 1 bytes @ 0x5
   249                           
   250                           
   251                           ; 2 bytes @ 0x5
   252     0075                     	ds	2
   253                           
   254                           	psect	maintext
   255     0715                     __pmaintext:	
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 244 in file "newmain.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  data            2    5[COMMON] unsigned short 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0, pclath, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : B00/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   275 ;;      Params:         0       0       0       0
   276 ;;      Locals:         2       0       0       0
   277 ;;      Temps:          0       0       0       0
   278 ;;      Totals:         2       0       0       0
   279 ;;Total ram usage:        2 bytes
   280 ;; Hardware stack levels required when called: 1
   281 ;; This function calls:
   282 ;;		_ADC_Init
   283 ;;		_ADC_Read
   284 ;;		_sendParallelData
   285 ;; This function is called by:
   286 ;;		Startup code after reset
   287 ;; This function uses a non-reentrant model
   288 ;;
   289                           
   290     0715                     _main:	
   291                           ;psect for function _main
   292                           
   293     0715                     l659:	
   294                           ;incstack = 0
   295                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   296                           
   297                           
   298                           ;newmain.c: 245:     ADC_Init();
   299     0715  118A  26F9  118A   	fcall	_ADC_Init
   300     0718                     l661:
   301                           
   302                           ;newmain.c: 247:     TRISCbits.TRISC0 = 0;
   303     0718  1683               	bsf	3,5	;RP0=1, select bank1
   304     0719  1303               	bcf	3,6	;RP1=0, select bank1
   305     071A  1007               	bcf	7,0	;volatile
   306     071B                     l663:
   307                           
   308                           ;newmain.c: 248:     TRISCbits.TRISC1 = 0;
   309     071B  1087               	bcf	7,1	;volatile
   310     071C                     l665:
   311                           
   312                           ;newmain.c: 249:     TRISCbits.TRISC2 = 0;
   313     071C  1107               	bcf	7,2	;volatile
   314     071D                     l667:
   315                           
   316                           ;newmain.c: 250:     TRISCbits.TRISC5 = 0;
   317     071D  1287               	bcf	7,5	;volatile
   318     071E                     l669:
   319                           
   320                           ;newmain.c: 251:     TRISCbits.TRISC4 = 0;
   321     071E  1207               	bcf	7,4	;volatile
   322     071F                     l671:
   323                           
   324                           ;newmain.c: 252:     TRISCbits.TRISC3 = 0;
   325     071F  1187               	bcf	7,3	;volatile
   326     0720                     l673:
   327                           
   328                           ;newmain.c: 253:     TRISCbits.TRISC6 = 0;
   329     0720  1307               	bcf	7,6	;volatile
   330     0721                     l675:
   331                           
   332                           ;newmain.c: 254:     TRISCbits.TRISC7 = 0;
   333     0721  1387               	bcf	7,7	;volatile
   334     0722                     l677:
   335                           
   336                           ;newmain.c: 255:     TRISBbits.TRISB4 = 0;
   337     0722  1206               	bcf	6,4	;volatile
   338     0723                     l679:
   339                           
   340                           ;newmain.c: 256:     TRISBbits.TRISB5 = 0;
   341     0723  1286               	bcf	6,5	;volatile
   342     0724                     l681:
   343                           
   344                           ;newmain.c: 258:     TRISBbits.TRISB7 = 0;
   345     0724  1386               	bcf	6,7	;volatile
   346     0725                     l683:
   347                           
   348                           ;newmain.c: 259:     TRISBbits.TRISB6 = 1;
   349     0725  1706               	bsf	6,6	;volatile
   350     0726                     l685:
   351                           
   352                           ;newmain.c: 261:     PORTBbits.RB7 = 0;
   353     0726  1283               	bcf	3,5	;RP0=0, select bank0
   354     0727  1303               	bcf	3,6	;RP1=0, select bank0
   355     0728  1386               	bcf	6,7	;volatile
   356     0729                     l687:
   357                           
   358                           ;newmain.c: 265:         if(PORTBbits.RB6 == 1){
   359     0729  1F06               	btfss	6,6	;volatile
   360     072A  2F2C               	goto	u141
   361     072B  2F2D               	goto	u140
   362     072C                     u141:
   363     072C  2F29               	goto	l687
   364     072D                     u140:
   365     072D                     l689:
   366                           
   367                           ;newmain.c: 266:             unsigned short data = ADC_Read();
   368     072D  118A  26EB  118A   	fcall	_ADC_Read
   369     0730  0871               	movf	?_ADC_Read+1,w
   370     0731  00F6               	movwf	main@data+1
   371     0732  0870               	movf	?_ADC_Read,w
   372     0733  00F5               	movwf	main@data
   373     0734                     l691:
   374                           
   375                           ;newmain.c: 267:             PORTBbits.RB7 = 1;
   376     0734  1283               	bcf	3,5	;RP0=0, select bank0
   377     0735  1303               	bcf	3,6	;RP1=0, select bank0
   378     0736  1786               	bsf	6,7	;volatile
   379     0737                     l693:
   380                           
   381                           ;newmain.c: 268:             sendParallelData(data);
   382     0737  0876               	movf	main@data+1,w
   383     0738  00F1               	movwf	sendParallelData@data+1
   384     0739  0875               	movf	main@data,w
   385     073A  00F0               	movwf	sendParallelData@data
   386     073B  118A  2744  118A   	fcall	_sendParallelData
   387     073E                     l695:
   388                           
   389                           ;newmain.c: 269:             PORTBbits.RB7 = 0;
   390     073E  1283               	bcf	3,5	;RP0=0, select bank0
   391     073F  1303               	bcf	3,6	;RP1=0, select bank0
   392     0740  1386               	bcf	6,7	;volatile
   393     0741  2F29               	goto	l687
   394     0742  118A  2800         	ljmp	start
   395     0744                     __end_of_main:
   396                           
   397                           	psect	text1
   398     0744                     __ptext1:	
   399 ;; *************** function _sendParallelData *****************
   400 ;; Defined at:
   401 ;;		line 231 in file "newmain.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  data            2    0[COMMON] unsigned short 
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   415 ;;      Params:         2       0       0       0
   416 ;;      Locals:         0       0       0       0
   417 ;;      Temps:          3       0       0       0
   418 ;;      Totals:         5       0       0       0
   419 ;;Total ram usage:        5 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428     0744                     _sendParallelData:	
   429                           ;psect for function _sendParallelData
   430                           
   431     0744                     l657:	
   432                           ;incstack = 0
   433                           ; Regs used in _sendParallelData: [wreg+status,2+status,0]
   434                           
   435                           
   436                           ;newmain.c: 232:     PORTCbits.RC0 = (data >> 0) & 1;
   437     0744  3001               	movlw	1
   438     0745  0570               	andwf	sendParallelData@data,w
   439     0746  00F2               	movwf	??_sendParallelData
   440     0747  1283               	bcf	3,5	;RP0=0, select bank0
   441     0748  1303               	bcf	3,6	;RP1=0, select bank0
   442     0749  0807               	movf	7,w	;volatile
   443     074A  0672               	xorwf	??_sendParallelData,w
   444     074B  39FE               	andlw	-2
   445     074C  0672               	xorwf	??_sendParallelData,w
   446     074D  0087               	movwf	7	;volatile
   447                           
   448                           ;newmain.c: 233:     PORTCbits.RC1 = (data >> 1) & 1;
   449     074E  0871               	movf	sendParallelData@data+1,w
   450     074F  00F3               	movwf	??_sendParallelData+1
   451     0750  0870               	movf	sendParallelData@data,w
   452     0751  00F2               	movwf	??_sendParallelData
   453     0752  1003               	clrc
   454     0753  0CF3               	rrf	??_sendParallelData+1,f
   455     0754  0CF2               	rrf	??_sendParallelData,f
   456     0755  0872               	movf	??_sendParallelData,w
   457     0756  3901               	andlw	1
   458     0757  00F4               	movwf	??_sendParallelData+2
   459     0758  0DF4               	rlf	??_sendParallelData+2,f
   460     0759  0807               	movf	7,w	;volatile
   461     075A  0674               	xorwf	??_sendParallelData+2,w
   462     075B  39FD               	andlw	-3
   463     075C  0674               	xorwf	??_sendParallelData+2,w
   464     075D  0087               	movwf	7	;volatile
   465                           
   466                           ;newmain.c: 234:     PORTCbits.RC2 = (data >> 2) & 1;
   467     075E  0871               	movf	sendParallelData@data+1,w
   468     075F  00F3               	movwf	??_sendParallelData+1
   469     0760  0870               	movf	sendParallelData@data,w
   470     0761  00F2               	movwf	??_sendParallelData
   471     0762  1003               	clrc
   472     0763  0CF3               	rrf	??_sendParallelData+1,f
   473     0764  0CF2               	rrf	??_sendParallelData,f
   474     0765  1003               	clrc
   475     0766  0CF3               	rrf	??_sendParallelData+1,f
   476     0767  0CF2               	rrf	??_sendParallelData,f
   477     0768  0872               	movf	??_sendParallelData,w
   478     0769  3901               	andlw	1
   479     076A  00F4               	movwf	??_sendParallelData+2
   480     076B  0DF4               	rlf	??_sendParallelData+2,f
   481     076C  0DF4               	rlf	??_sendParallelData+2,f
   482     076D  0807               	movf	7,w	;volatile
   483     076E  0674               	xorwf	??_sendParallelData+2,w
   484     076F  39FB               	andlw	-5
   485     0770  0674               	xorwf	??_sendParallelData+2,w
   486     0771  0087               	movwf	7	;volatile
   487                           
   488                           ;newmain.c: 235:     PORTCbits.RC5 = (data >> 3) & 1;
   489     0772  0871               	movf	sendParallelData@data+1,w
   490     0773  00F3               	movwf	??_sendParallelData+1
   491     0774  0870               	movf	sendParallelData@data,w
   492     0775  00F2               	movwf	??_sendParallelData
   493     0776  1003               	clrc
   494     0777  0CF3               	rrf	??_sendParallelData+1,f
   495     0778  0CF2               	rrf	??_sendParallelData,f
   496     0779  1003               	clrc
   497     077A  0CF3               	rrf	??_sendParallelData+1,f
   498     077B  0CF2               	rrf	??_sendParallelData,f
   499     077C  1003               	clrc
   500     077D  0CF3               	rrf	??_sendParallelData+1,f
   501     077E  0CF2               	rrf	??_sendParallelData,f
   502     077F  0872               	movf	??_sendParallelData,w
   503     0780  3901               	andlw	1
   504     0781  00F4               	movwf	??_sendParallelData+2
   505     0782  0EF4               	swapf	??_sendParallelData+2,f
   506     0783  0DF4               	rlf	??_sendParallelData+2,f
   507     0784  0807               	movf	7,w	;volatile
   508     0785  0674               	xorwf	??_sendParallelData+2,w
   509     0786  39DF               	andlw	-33
   510     0787  0674               	xorwf	??_sendParallelData+2,w
   511     0788  0087               	movwf	7	;volatile
   512                           
   513                           ;newmain.c: 236:     PORTCbits.RC4 = (data >> 4) & 1;
   514     0789  0871               	movf	sendParallelData@data+1,w
   515     078A  00F3               	movwf	??_sendParallelData+1
   516     078B  0870               	movf	sendParallelData@data,w
   517     078C  00F2               	movwf	??_sendParallelData
   518     078D  3004               	movlw	4
   519     078E                     u95:
   520     078E  1003               	clrc
   521     078F  0CF3               	rrf	??_sendParallelData+1,f
   522     0790  0CF2               	rrf	??_sendParallelData,f
   523     0791  3EFF               	addlw	-1
   524     0792  1D03               	skipz
   525     0793  2F8E               	goto	u95
   526     0794  0872               	movf	??_sendParallelData,w
   527     0795  3901               	andlw	1
   528     0796  00F4               	movwf	??_sendParallelData+2
   529     0797  0EF4               	swapf	??_sendParallelData+2,f
   530     0798  0807               	movf	7,w	;volatile
   531     0799  0674               	xorwf	??_sendParallelData+2,w
   532     079A  39EF               	andlw	-17
   533     079B  0674               	xorwf	??_sendParallelData+2,w
   534     079C  0087               	movwf	7	;volatile
   535                           
   536                           ;newmain.c: 237:     PORTCbits.RC3 = (data >> 5) & 1;
   537     079D  0871               	movf	sendParallelData@data+1,w
   538     079E  00F3               	movwf	??_sendParallelData+1
   539     079F  0870               	movf	sendParallelData@data,w
   540     07A0  00F2               	movwf	??_sendParallelData
   541     07A1  3005               	movlw	5
   542     07A2                     u105:
   543     07A2  1003               	clrc
   544     07A3  0CF3               	rrf	??_sendParallelData+1,f
   545     07A4  0CF2               	rrf	??_sendParallelData,f
   546     07A5  3EFF               	addlw	-1
   547     07A6  1D03               	skipz
   548     07A7  2FA2               	goto	u105
   549     07A8  0872               	movf	??_sendParallelData,w
   550     07A9  3901               	andlw	1
   551     07AA  00F4               	movwf	??_sendParallelData+2
   552     07AB  0DF4               	rlf	??_sendParallelData+2,f
   553     07AC  0DF4               	rlf	??_sendParallelData+2,f
   554     07AD  0DF4               	rlf	??_sendParallelData+2,f
   555     07AE  0807               	movf	7,w	;volatile
   556     07AF  0674               	xorwf	??_sendParallelData+2,w
   557     07B0  39F7               	andlw	-9
   558     07B1  0674               	xorwf	??_sendParallelData+2,w
   559     07B2  0087               	movwf	7	;volatile
   560                           
   561                           ;newmain.c: 238:     PORTCbits.RC6 = (data >> 6) & 1;
   562     07B3  0871               	movf	sendParallelData@data+1,w
   563     07B4  00F3               	movwf	??_sendParallelData+1
   564     07B5  0870               	movf	sendParallelData@data,w
   565     07B6  00F2               	movwf	??_sendParallelData
   566     07B7  3006               	movlw	6
   567     07B8                     u115:
   568     07B8  1003               	clrc
   569     07B9  0CF3               	rrf	??_sendParallelData+1,f
   570     07BA  0CF2               	rrf	??_sendParallelData,f
   571     07BB  3EFF               	addlw	-1
   572     07BC  1D03               	skipz
   573     07BD  2FB8               	goto	u115
   574     07BE  0872               	movf	??_sendParallelData,w
   575     07BF  3901               	andlw	1
   576     07C0  00F4               	movwf	??_sendParallelData+2
   577     07C1  0EF4               	swapf	??_sendParallelData+2,f
   578     07C2  0DF4               	rlf	??_sendParallelData+2,f
   579     07C3  0DF4               	rlf	??_sendParallelData+2,f
   580     07C4  0807               	movf	7,w	;volatile
   581     07C5  0674               	xorwf	??_sendParallelData+2,w
   582     07C6  39BF               	andlw	-65
   583     07C7  0674               	xorwf	??_sendParallelData+2,w
   584     07C8  0087               	movwf	7	;volatile
   585                           
   586                           ;newmain.c: 239:     PORTCbits.RC7 = (data >> 7) & 1;
   587     07C9  0871               	movf	sendParallelData@data+1,w
   588     07CA  00F3               	movwf	??_sendParallelData+1
   589     07CB  0870               	movf	sendParallelData@data,w
   590     07CC  00F2               	movwf	??_sendParallelData
   591     07CD  3007               	movlw	7
   592     07CE                     u125:
   593     07CE  1003               	clrc
   594     07CF  0CF3               	rrf	??_sendParallelData+1,f
   595     07D0  0CF2               	rrf	??_sendParallelData,f
   596     07D1  3EFF               	addlw	-1
   597     07D2  1D03               	skipz
   598     07D3  2FCE               	goto	u125
   599     07D4  0872               	movf	??_sendParallelData,w
   600     07D5  3901               	andlw	1
   601     07D6  00F4               	movwf	??_sendParallelData+2
   602     07D7  0CF4               	rrf	??_sendParallelData+2,f
   603     07D8  0CF4               	rrf	??_sendParallelData+2,f
   604     07D9  0807               	movf	7,w	;volatile
   605     07DA  0674               	xorwf	??_sendParallelData+2,w
   606     07DB  397F               	andlw	-129
   607     07DC  0674               	xorwf	??_sendParallelData+2,w
   608     07DD  0087               	movwf	7	;volatile
   609                           
   610                           ;newmain.c: 240:     PORTBbits.RB4 = (data >> 8) & 1;
   611     07DE  0871               	movf	sendParallelData@data+1,w
   612     07DF  3901               	andlw	1
   613     07E0  00F2               	movwf	??_sendParallelData
   614     07E1  0EF2               	swapf	??_sendParallelData,f
   615     07E2  0806               	movf	6,w	;volatile
   616     07E3  0672               	xorwf	??_sendParallelData,w
   617     07E4  39EF               	andlw	-17
   618     07E5  0672               	xorwf	??_sendParallelData,w
   619     07E6  0086               	movwf	6	;volatile
   620                           
   621                           ;newmain.c: 241:     PORTBbits.RB5 = (data >> 9) & 1;
   622     07E7  0871               	movf	sendParallelData@data+1,w
   623     07E8  00F3               	movwf	??_sendParallelData+1
   624     07E9  0870               	movf	sendParallelData@data,w
   625     07EA  00F2               	movwf	??_sendParallelData
   626     07EB  3009               	movlw	9
   627     07EC                     u135:
   628     07EC  1003               	clrc
   629     07ED  0CF3               	rrf	??_sendParallelData+1,f
   630     07EE  0CF2               	rrf	??_sendParallelData,f
   631     07EF  3EFF               	addlw	-1
   632     07F0  1D03               	skipz
   633     07F1  2FEC               	goto	u135
   634     07F2  0872               	movf	??_sendParallelData,w
   635     07F3  3901               	andlw	1
   636     07F4  00F4               	movwf	??_sendParallelData+2
   637     07F5  0EF4               	swapf	??_sendParallelData+2,f
   638     07F6  0DF4               	rlf	??_sendParallelData+2,f
   639     07F7  0806               	movf	6,w	;volatile
   640     07F8  0674               	xorwf	??_sendParallelData+2,w
   641     07F9  39DF               	andlw	-33
   642     07FA  0674               	xorwf	??_sendParallelData+2,w
   643     07FB  0086               	movwf	6	;volatile
   644     07FC                     l36:
   645     07FC  0008               	return
   646     07FD                     __end_of_sendParallelData:
   647                           
   648                           	psect	text2
   649     06EB                     __ptext2:	
   650 ;; *************** function _ADC_Read *****************
   651 ;; Defined at:
   652 ;;		line 225 in file "newmain.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  2    0[COMMON] unsigned short 
   659 ;; Registers used:
   660 ;;		wreg
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   666 ;;      Params:         2       0       0       0
   667 ;;      Locals:         0       0       0       0
   668 ;;      Temps:          0       0       0       0
   669 ;;      Totals:         2       0       0       0
   670 ;;Total ram usage:        2 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679     06EB                     _ADC_Read:	
   680                           ;psect for function _ADC_Read
   681                           
   682     06EB                     l651:	
   683                           ;incstack = 0
   684                           ; Regs used in _ADC_Read: [wreg]
   685                           
   686                           
   687                           ;newmain.c: 226:     ADCON0bits.GO = 1;
   688     06EB  1283               	bcf	3,5	;RP0=0, select bank0
   689     06EC  1303               	bcf	3,6	;RP1=0, select bank0
   690     06ED  149F               	bsf	31,1	;volatile
   691     06EE                     l30:	
   692                           ;newmain.c: 227:     while (ADCON0bits.GO_nDONE);
   693                           
   694     06EE  189F               	btfsc	31,1	;volatile
   695     06EF  2EF1               	goto	u81
   696     06F0  2EF2               	goto	u80
   697     06F1                     u81:
   698     06F1  2EEE               	goto	l30
   699     06F2                     u80:
   700     06F2                     l653:
   701                           
   702                           ;newmain.c: 228:     return ((unsigned short)ADRESH << 8) | ADRESL;
   703     06F2  081E               	movf	30,w	;volatile
   704     06F3  00F1               	movwf	?_ADC_Read+1
   705     06F4  1683               	bsf	3,5	;RP0=1, select bank1
   706     06F5  1303               	bcf	3,6	;RP1=0, select bank1
   707     06F6  081E               	movf	30,w	;volatile
   708     06F7  00F0               	movwf	?_ADC_Read
   709     06F8                     l33:
   710     06F8  0008               	return
   711     06F9                     __end_of_ADC_Read:
   712                           
   713                           	psect	text3
   714     06F9                     __ptext3:	
   715 ;; *************** function _ADC_Init *****************
   716 ;; Defined at:
   717 ;;		line 213 in file "newmain.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   731 ;;      Params:         0       0       0       0
   732 ;;      Locals:         0       0       0       0
   733 ;;      Temps:          0       0       0       0
   734 ;;      Totals:         0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744     06F9                     _ADC_Init:	
   745                           ;psect for function _ADC_Init
   746                           
   747     06F9                     l589:	
   748                           ;incstack = 0
   749                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
   750                           
   751                           
   752                           ;newmain.c: 214:     ANSEL = 0x00;
   753     06F9  1283               	bcf	3,5	;RP0=0, select bank2
   754     06FA  1703               	bsf	3,6	;RP1=1, select bank2
   755     06FB  019E               	clrf	30	;volatile
   756                           
   757                           ;newmain.c: 215:     ANSELH = 0x00;
   758     06FC  019F               	clrf	31	;volatile
   759     06FD                     l591:
   760                           
   761                           ;newmain.c: 216:     TRISAbits.TRISA2 = 1;
   762     06FD  1683               	bsf	3,5	;RP0=1, select bank1
   763     06FE  1303               	bcf	3,6	;RP1=0, select bank1
   764     06FF  1505               	bsf	5,2	;volatile
   765     0700                     l593:
   766                           
   767                           ;newmain.c: 217:     ANSELbits.ANS2 = 1;
   768     0700  1283               	bcf	3,5	;RP0=0, select bank2
   769     0701  1703               	bsf	3,6	;RP1=1, select bank2
   770     0702  151E               	bsf	30,2	;volatile
   771     0703                     l595:
   772                           
   773                           ;newmain.c: 218:     ADCON0bits.CHS = 2;
   774     0703  1283               	bcf	3,5	;RP0=0, select bank0
   775     0704  1303               	bcf	3,6	;RP1=0, select bank0
   776     0705  081F               	movf	31,w	;volatile
   777     0706  39C3               	andlw	-61
   778     0707  3808               	iorlw	8
   779     0708  009F               	movwf	31	;volatile
   780     0709                     l597:
   781                           
   782                           ;newmain.c: 219:     ADCON1bits.ADCS = 0b101;
   783     0709  1683               	bsf	3,5	;RP0=1, select bank1
   784     070A  1303               	bcf	3,6	;RP1=0, select bank1
   785     070B  081F               	movf	31,w	;volatile
   786     070C  398F               	andlw	-113
   787     070D  3850               	iorlw	80
   788     070E  009F               	movwf	31	;volatile
   789     070F                     l599:
   790                           
   791                           ;newmain.c: 220:     ADCON0bits.ADFM = 1;
   792     070F  1283               	bcf	3,5	;RP0=0, select bank0
   793     0710  1303               	bcf	3,6	;RP1=0, select bank0
   794     0711  179F               	bsf	31,7	;volatile
   795     0712                     l601:
   796                           
   797                           ;newmain.c: 221:     ADCON0bits.ADON = 1;
   798     0712  141F               	bsf	31,0	;volatile
   799     0713                     l603:
   800                           
   801                           ;newmain.c: 222:     ADCON0bits.VCFG = 0;
   802     0713  131F               	bcf	31,6	;volatile
   803     0714                     l27:
   804     0714  0008               	return
   805     0715                     __end_of_ADC_Init:
   806     007E                     btemp	set	126	;btemp
   807     007E                     wtemp0	set	126
   808                           
   809                           	psect	config
   810                           
   811                           ;Config register CONFIG @ 0x2007
   812                           ;	Oscillator Selection bits
   813                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA4/OSC2/CLKOUT and RA5/OSC1
      +                          /CLKIN
   814                           ;	Watchdog Timer Enable bit
   815                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   816                           ;	Power-up Timer Enable bit
   817                           ;	PWRTE = OFF, PWRT disabled
   818                           ;	MCLR Pin Function Select bit
   819                           ;	MCLRE = ON, MCLR pin function is MCLR
   820                           ;	Code Protection bit
   821                           ;	CP = OFF, Program memory code protection is disabled
   822                           ;	Data Code Protection bit
   823                           ;	CPD = OFF, Data memory code protection is disabled
   824                           ;	Brown-out Reset Selection bits
   825                           ;	BOREN = OFF, BOR disabled
   826                           ;	Internal External Switchover bit
   827                           ;	IESO = OFF, Internal External Switchover mode is disabled
   828                           ;	Fail-Safe Clock Monitor Enabled bit
   829                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   830     2007                     	org	8199
   831     2007  30F2               	dw	12530

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sendParallelData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     319
                                              5 COMMON     2     2      0
                           _ADC_Init
                           _ADC_Read
                   _sendParallelData
 ---------------------------------------------------------------------------------
 (1) _sendParallelData                                     5     3      2     296
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _sendParallelData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 31 10:38:41 2024

                      l30 06EE                        l33 06F8                        l27 0714  
                      l36 07FC                        u80 06F2                        u81 06F1  
                      u95 078E                       l601 0712                       l603 0713  
                     l651 06EB                       l653 06F2                       l661 0718  
                     l591 06FD                       l671 071F                       l663 071B  
                     l593 0700                       l657 0744                       l681 0724  
                     l673 0720                       l665 071C                       l595 0703  
                     l691 0734                       l683 0725                       l675 0721  
                     l667 071D                       l659 0715                       l597 0709  
                     l589 06F9                       l693 0737                       l685 0726  
                     l677 0722                       l669 071E                       l599 070F  
                     l695 073E                       l687 0729                       l679 0723  
                     l689 072D                       u105 07A2                       u115 07B8  
                     u140 072D                       u125 07CE                       u141 072C  
                     u135 07EC                      _main 0715                      btemp 007E  
        __end_of_ADC_Init 0715          __end_of_ADC_Read 06F9                      start 0000  
                   ?_main 0070                     _ANSEL 011E                     status 0003  
                   wtemp0 007E           __initialization 07FD              __end_of_main 0744  
                  ??_main 0075                    _ADRESH 001E                    _ADRESL 009E  
                  _ANSELH 011F                 ?_ADC_Init 0070                 ?_ADC_Read 0070  
 __end_of__initialization 07FD            __pcstackCOMMON 0070                ??_ADC_Init 0070  
              ??_ADC_Read 0072                __pmaintext 0715          _sendParallelData 0744  
               _ANSELbits 011E                   __ptext1 0744                   __ptext2 06EB  
                 __ptext3 06F9      end_of_initialization 07FD                 _PORTBbits 0006  
               _PORTCbits 0007                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISCbits 0087       start_initialization 07FD                 ___latbits 0001  
    sendParallelData@data 0070  __end_of_sendParallelData 07FD                  _ADC_Init 06F9  
                _ADC_Read 06EB                _ADCON0bits 001F                _ADCON1bits 009F  
                main@data 0075         ?_sendParallelData 0070        ??_sendParallelData 0072  
